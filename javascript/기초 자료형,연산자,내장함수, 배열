ECMAScript = javascript
 
  바닐라스크립트/순정스크립트 : 원문
  자바스크립트 라이브러리 - jQuery
  자바스크립트 프레임워크 - 앵귤러js, reactjs, vuejs
  node.js : 웹개발(서버스크립트)
  typescript...
  
  자바스크립트
    한 라인이 끝날때 ; 적용
    영문 대/소문자 구분
    
  1.자료형/data형
    -프로그래밍 언어로 조작할 수있는 값의 유형( 종류 ) ex) '문자', "문자"
    -문자열(String), 숫자(Number), 불린 (Boolean), 널(null), 언 디파인드(undefined) ,객체(Object)
    -이스케이프 문자( \t => 수평탭, \n => 줄바꿈, \' => 작은따옴표, \" =>큰따옴표, \\ =>역슬러시  )
    
    -String => '',"" 안에 있는 데이터를 String 으로 인식한다
    -Number => 정수/실수/음수/양수 ex) 1, -1, 1.1,
    -boolean => true(참)/false(거짓) : 양자택일 알고리즘
             -true  = 1 '100' '홍길동' 10 => 0/false/null 이 아닌 모든 값
             -false = 0/null
    -undefined => 변수를 선언하고 아무값도 대입을 안한 상태에서 변수를 클릭시
                  변수를 선언하지 않고 사용했을 때
    -null(널문자) => 아무것도 없는 문자( 문자지우개 )==''/""
    -Object(객체) => 객체는 속성과 메소드()를 가지고 있다 
                    Object.속성=값;
                    Object.메소드();
    
  2.연산자
    -특정 계산을 하기위해 만들어 놓은 기호/부호
    -우선순위를 가지고 있다
    
    -산술연산자( 계산을 위한 )
      => 사칙연산, %(mod 연산자, 나눗셈, 결과값:나머지값) : 홀수/짝수/배수 판별
      => 우선순위가 가장 높다 => ()를 사용하여 우선순위 조율
      => -,*,%,/ : 자동형변환 ex)'100'-'10','100'*10, 500%'2' 모두 계산한다
      
    -+ (덧셈, 문자열 결합)
    
    -관계연산자 / 비교연산자
      => ( < > <= >= ==(같다) !=(다르다) )
      => 결과값이 true(참)/false(거짓) : 불리언/부불값/논리값 -> 조건문에서 조건절로 사용
      => 문자열과 문자열을 비교할때 사전식 순서에 따라 계산 ex(a<z, ㄱ<ㅎ)
      => 문자열과 숫자를 비교할 때 숫자의 크기로 계산 ( 자동형변환 )
      
    -논리연산자
      => !(not), &&(and), ||(or)
      => true와 false를 계산하는 연산자
      => 결과값이 true(참)/false(거짓) => 조건문에서 조건절로 사용
      => true : flase/0/null 이 아닌 모든값
      => false : flase/0/null
      => &&(and) : 양쪽 모두 true 값이어야 true / 나머지는 false -> 교집함
      => ||(or) : 양쪽 모두 false 값이어야 false / 나머지는 true -> 합집함
      => 우선순위 &&(and) > ||(or)
      
    -대입연산자
      => '=' -> 변수=값
      => 최하위 연산자
      => 덮어쓰기 가능
      
    -복합연산자
     => ( += -= /= %= )
     => 산술+대입 연산자
     => 변수가 지닌 값에 사칙연산을 적용
     => a=a+100; = a+=100;
      
    -증강연산자
     => ( ++ -- )
     => 변수++, 변수--(후위형), --변수, --변수(전위형)
     => 변수값 1씩 증가/감소
     => a=a+1, a+=1, a++; ++a; 
     => (전위형) : 최우선연산자
     => (후위형) : 최하위연산자 -> ()로 감싸주어도 나중에 계산
    
    
      *우선순위
    증강(전위형)연산자 > 산술연산자 > 관계연산자 > 논리연산자 > 대입연산자/복합연산자 > 증강(후위형)연산자
      
  3.변수
    -값을 저장할 때 사용하는 식별자( 값을 담는 그릇/방 )
    -변수 선언 후 다른타입의 값을 대입해도 에러가 나지 않는다 (var)
    -변수를 선언하는 방법
     var 변수 명; var 변수 명= 초기값;
     var변수명, 변수명;

    -영문(대/소(, 숫자, $ (첫자 => 영문,_,$ )
    -변수의 초기화
     =>var 문자형변수 = null; var 문자형변수 = '';
     =>var 숫자형변수 = 0;
     =>var 불린형변수 = false;
     
  4.배열[Array]
   -변수의 묶음
   -배열의 크기가 가변형이다
   -배열요소의 타입(종류)를 다양하게 줄 수 있다
   -data type : Object
   
   -배열 선언 방법
    => var 배열명 = [값1, 값2, 값3,.....값10]; => 배열명[0]~배열명[9]
    => var 배열명 = [];
    =. var 배열명 = new Array();
    
    
    
  5.내장함수
    - 자바스크립트에 내장 되어있는 기본 함수
    - 함수/메소드/function 같은 용어 => 함수명();
    - alert('출력값') => 메세지 출력 함수
    - console.log(입력값); => console 창에 입력값을 출력하는 함수
    - var 변수 = prompt('입력 메시지','초기값'); => 사용자 입력을 받을 수 있는 함수
    - var 변수 = confirm('메세지'); => 사용자에게 선택권을 주는 함수 확인(true)/취소(false)
    - typeof(값/연산식/변수/배열...); => 그 해당 결과값의 data type(자료형) 을 알려주는 함수
    - Number(문자화된숫자); => 숫자(number) 타입으로 형변환 함수 ex) '30' -> 30
    - String(숫자); => 문자(string) 타입으로 형변환 함수 ex) 30 -> '30'
    
    
    
    키워드와 공백 문자를 사용핛 수 없음
    숫자로 시작핛 수 없음
    특수문자는 _과 $만 허용
    
    개발자도구 => 에러검사 => 컴파일한다 표현
    SyntaxError : 기호, 부호 에러
    
    
